#!/bin/bash

# launcher
# manage launching apps in specific vms
# system tools, etc.
#
# 2020.03.11

#source $(dirname "$0")/qubes_functions
source /home/coconut/admin/qubes_functions

__DIALOGHEIGHT=770
__DVMS=$(cat <<EOF | tr '[[:space:]]' ' '
    fedora-disp
    media-disp
    plus-disp
    printer-disp
    ..............................
    congy
    dev
    email
    epub
    files
    fin
    gpg
    media
    study
    tex
    transfer
    work
    zoom
    ..............................
EOF
)

__APPS=$(cat <<EOF | tr '[[:space:]]' ' '
    <pass>
    <search>
    <url>
    aljazeera.com
    democracynow.org
    gmail.com
    google.com
    linkedin.com
    plugins.com
    privateemail.com
    workflowy.com
    ..............................
    arrange
    calibre
    chromium
    classicFM
    firefox
    gedit
    gnome-terminal
    hostnames
    insperity
    kodi
    nautilus
    thunder
    win10start
    xterm
    ..............................
    scan
    vpn
    ping
    shutdown
    startup
EOF
)

declare __DVM=fedora-disp
declare __PLUSDVM=plus-disp
declare __VPNDVM=vpn-disp
declare __VPN_NETWORK=sys-vpn-ro
declare __CONGY=congy
declare __EMAIL=email
declare __EPUB=epub
declare __MEDIA=media
declare __PRINTERDVM=printer-disp
declare __GPG=gpg
declare __FIREWALL=sys-firewall
declare __qvm_run_options="-vp --color-stderr=37"
#declare __lockme=/tmp/launcher.lock
declare __DISPWAIT=10


function get_vmname () {
    declare _vms=$(qvm-ls --raw-list --running --exclude dom0 --all \
        | sort \
        | tr '[[:space:]]' ' ')

    declare _vm=$(zenity_list $__DVMS $_vms )
    echo $_vm
}


function qube_num_running () {
    declare _num_running 

    _num_running=$(qvm-ls --running --raw-list \
        | grep -v 'dom0' \
        | wc -l)
    echo $_num_running
}



function qvm_firefox () {
    declare _vm="$1"
    declare _url="${@:2}"

    qvm-run \
        $__qvm_run_options \
        --dispvm=$_vm \
        "firefox $_url" &
    sleep $__DISPWAIT
}



function qvm_chrome () {
    declare _vm="$1"
    declare _url="${@:2}"

    qvm-run \
        $__qvm_run_options \
        --dispvm=$_vm \
        "chromium --password-store=basic $_url" &
    sleep $__DISPWAIT
}



function firefox_plugins () {
    declare _urls=$(tr -s [:space:] ' ' <<EOF
        https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/
        https://addons.mozilla.org/en-US/firefox/addon/privacy-badger17/
EOF
    )
    qvm_firefox $__DVM "$_urls" &

#        https://addons.mozilla.org/en-US/firefox/addon/noscript/ 
#        https://addons.mozilla.org/en-US/firefox/addon/adblock-plus/
#        https://addons.mozilla.org/en-US/firefox/addon/printable-the-print-doctor/
#        https://addons.mozilla.org/en-US/firefox/addon/user-agent-string-switcher/
#        https://outerjoin.us
}



function firefox_work () {
    declare _urls=$(tr -s [:space:] ' ' <<EOF
        http://workflowy.com/login/
        https://www.notion.so/login
        https://evernote.com/Login.action
        https://trello.com/login
        https://www.commafeed.com
EOF
    )
    qvm_firefox $__DVM "$_urls" &
}



function chrome_linkedin () {
    qvm_chrome $__PLUSDVM "https://linkedin.com" &
}



function get_vpn_qubename () {
    declare _vpnname=$(qvm-ls --fields NAME,TEMPLATE --running \
        | grep $__VPNDVM \
        | cut -f 1 -d ' '
        )

    echo $_vpnname
}



function qube_vpn () {
    declare _vpndvm
    
    qvm-start \
        --skip-if-running \
        $__VPN_NETWORK

    qvm-run \
        --dispvm=$__VPNDVM \
        "/home/user/startup"

    # zenity_fix --info --title "VPN" --text "Waiting to kill VPN"
    read -ep $'\nWaiting to kill VPN...' _xx

    _vpndvm=$(get_vpn_qubename)

    notify 2 "qube_vpn found:$_vpndvm"

    qvm-kill $_vpndvm
    qvm-shutdown $__VPN_NETWORK
}



function install_posttrello () {
    declare _destqube=$1
    declare _f
    declare _mydir=$(dirname "$0")

    cat <<EOF |
    $_mydir/utilities/postTrello
    $_mydir/utilities/postTrello.secrets
EOF

    while read _f; do
        notify 2 "transferring $_f -> $_destqube"
        qvm-copy-to-vm \
            $_destqube \
            $_f
    done
}



function win10_start () {
    qvm-run \
        $__qvm_run_options \
        -u root \
        sys-firewall \
        "iptables -I FORWARD 2 -s 10.137.0.0/24 -d 10.137.0.39 -j ACCEPT"
    qvm-start win10-esri
    wait_qube_startup win10-esri
}



function thunderbird_local () {
    qvm-run -u root $__qvm_run_options $__EMAIL "/home/user/fix_locale"
    qvm-run $__qvm_run_options $__EMAIL "/home/user/thunderbird_timefix"
    wait_qube_startup $__EMAIL
}



function qube_shutdown () {
    declare _dispvm
    declare _displist=$(qvm-ls --raw-data --running --fields name \
        | grep disp 
        )

    while read -r _dispvm <&3; do
        notify 2 "qube_shutdown: --$_dispvm--"
        qvm-kill $_dispvm
    done 3<<< "$_displist"

    declare _runninglist=$(qvm-ls --raw-data --running --fields name \
        | grep -v sys-firewall \
        | grep -v sys-net \
        | grep -v dom0
        )

    while read -r _vm <&3; do
        notify 2 "qube_shutdown: --$_vm--"
        qvm-shutdown --wait $_vm
    done 3<<< "$_runninglist "

    qvm-shutdown --wait sys-firewall
    qvm-shutdown --wait sys-net

    sleep 10

    sudo poweroff
}



# function safe_execute_vm () {
#     declare _vm=$1
#     declare _command=${@:2}
# 
#     notify 2 "safe_execute_vm: vm:$_vm with $_command"
# 
#     if [[ $(qube_get_state $_vm) == "Running" ]]; then
#         eval $_command &
#     else
#         safe_execute $_command
#     fi
# }



# function safe_execute () {
#     declare _command=$@
# 
#     notify 2 "safe_execute: $_command"
# 
#     lockit
#     wait_disk_ready
#     eval $_command & 
#     unlockit
# 
#     notify 2 "safe_execute: evaled"
# }
# 
# 
# 
# function unlockit () {
#     sleep 1
#     rmdir $__lockme
#     notify 2 "unlockit: lock removed"
# }
# 
# 
# 
# function lockit () {
#     while ! mkdir $__lockme 2>/dev/null; do
#         notify 2 "lockit: waiting"
#         sleep 1
#     done
# 
#     notify 2 "lockit: lock made"
# }



function launcher_main () {
    # declare _app_selected=$(zenity_fix \
    #     --height=$__DIALOGHEIGHT \
    #     --list \
    #     --title="Application" \
    #     --column="Application" \
    #     $__APPS)

    declare _app_selected=$(zenity_list \
        $__APPS)

    if [[ "$_app_selected" ]]; then
        case $_app_selected in
           '<pass>')
                declare _loginfile="logins_2022"
                declare _passstring
                read -ep $'\nPassword: ' _passstring

                if [[ ! -z "$_passstring" ]]; then
                    qvm-run \
                        $__qvm_run_options \
                        $__GPG \
                        "gnome-terminal --geometry=115x10 -e 'bash -c \"grep -i $_passstring $_loginfile;bash\" '" &
                    wait_qube_startup $__GPG
                fi
                ;;
                
            '<search>')
                declare _searchstring
                read -ep $'\nSearch terms:' _searchstring

                if [[ ! -z "$_searchstring" ]]; then
                    qvm_firefox $__DVM "-search \"$_searchstring\""
                fi
                ;;

            '<url>')
                declare _url
                read -ep $'\nURL: ' _url
                qvm_firefox $__DVM "$_url"
                ;;

            democracynow.org | aljazeera.com)
                qvm_chrome $__PLUSDVM "$_app_selected"
                ;;

            google.com | gmail.com | privateemail.com)
                qvm_firefox $__DVM $_app_selected
                ;;

            linkedin.com)
                chrome_linkedin
                ;;

            workflowy.com)
                firefox_work
                ;;

            plugins.com)
                firefox_plugins
                ;;

            # apps to run in any vm or dvm
            arrange)
                declare _mydir=$(dirname "$0")
                exec $_mydir/qube_arrangewindows
                ;; 

            classicFM)
                qvm-run \
                    $__qvm_run_options \
                    $__MEDIA \
                    "\"vlc /home/user/media/ClassicFMMP3.m3u\""
                wait_qube_startup $__MEDIA
                ;;

            chromium)
                clear
                declare _vm=$(get_vmname)

                if [[ "$_vm" ]]; then 
                    qvm_chrome $_vm
                    wait_qube_startup $_vm
                fi
                ;;

            firefox | gedit | nautilus | xterm | gnome-terminal)
                clear
                declare _vm=$(get_vmname)

                if [[ "$_vm" ]]; then 
                    if [[ "$_vm" == *"-disp"* ]]; then
                        qvm-run \
                            $__qvm_run_options \
                            --dispvm=$_vm \
                            "$_app_selected" &
                        sleep $__DISPWAIT

                    else
                        qvm-run \
                            $__qvm_run_options \
                            $_vm \
                            "$_app_selected" &
                        wait_qube_startup $_vm
                    fi
                fi
                ;;

            hostnames)
                clear
                declare _vm=$(get_vmname)
                if [[ "$_vm" ]]; then 
                    declare _localdir=$(dirname "$0")
                    exec $_localdir/qube_hostnames $_vm 
                fi
                ;;

            postTrello)
                clear
                declare _vm=$(get_vmname)
                if [[ "$_vm" ]]; then 
                    install_posttrello $_vm 
                fi
                ;;
            # apps for specific vms
            insperity)
                qvm_firefox $__DVM https://insperity.com

                declare _loginfile="logins_2022"
                qvm-run \
                    $__qvm_run_options \
                    $__GPG \
                    "\"gnome-terminal --geometry=115x10 -e 'bash -c \\\"grep -i insperity $_loginfile;bash\\\" '\""
                wait_qube_startup $__GPG
                ;;

            calibre)
                qvm-run \
                    $__qvm_run_options \
                    $__EPUB \
                    "calibre"
                wait_qube_startup $__EPUB
                ;;
                
            thunder)
                thunderbird_local
                ;;
            kodi)
                qvm-run \
                    $__qvm_run_options \
                    $__MEDIA \
                    "kodi"
                wait_qube_startup $__MEDIA
                ;;
                
            scan)
                qvm-run \
                    $__qvm_run_options \
                    --dispvm=$__PRINTERDVM \
                    "xterm -e scanBro"
                sleep $__DISPWAIT
                ;;
            vpn)
                qvm-run \
                    $__qvm_run_options \
                    $__VPN_NETWORK \
                    "'xterm -e watch -cd -n 2 ip addr'"
                wait_qube_startup $__VPN_NETWORK

                qube_vpn
                sleep $__DISPWAIT
                ;;
            # system maintenance
            ping)
                qvm-run \
                    $__qvm_run_options \
                    $__FIREWALL \
                    'xterm -e ping google.com'
                ;;
            win10start)
                win10_start
                ;;
            shutdown)
                qube_shutdown
                ;;
            startup)
                qvm-run \
                    $__qvm_run_options \
                    $__CONGY \
                    "gnome-terminal"
                sleep 3
                qvm-run \
                    $__qvm_run_options \
                    $__CONGY \
                    "teams"
                sleep 3
                qvm-run \
                    $__qvm_run_options \
                    $__CONGY \
                    "/home/user/startup"
                wait_qube_startup $__CONGY 
                sleep 3

                thunderbird_local
                sleep 3

                firefox_plugins
                sleep 3
                firefox_work
                sleep 3

                qvm-run \
                    $__qvm_run_options \
                    $__MEDIA \
                    "\"vlc /home/user/media/ClassicFMMP3.m3u\""
                wait_qube_startup $__MEDIA
                ;;

            *)
                ;;

        esac
    fi
    sleep 3
}

launcher_main


